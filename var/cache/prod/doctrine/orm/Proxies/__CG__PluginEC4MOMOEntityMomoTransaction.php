<?php

namespace Proxies\__CG__\Plugin\EC4MOMO\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class MomoTransaction extends \Plugin\EC4MOMO\Entity\MomoTransaction implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = [];



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return ['__isInitialized__', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'id', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'Order', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'env', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'partnerCode', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'storeId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'accessKey', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'amount', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'partnerRefId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'partnerTransId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'transType', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'momoTransId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'status', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'message', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'responseTime', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'signature'];
        }

        return ['__isInitialized__', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'id', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'Order', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'env', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'partnerCode', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'storeId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'accessKey', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'amount', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'partnerRefId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'partnerTransId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'transType', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'momoTransId', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'status', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'message', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'responseTime', '' . "\0" . 'Plugin\\EC4MOMO\\Entity\\MomoTransaction' . "\0" . 'signature'];
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (MomoTransaction $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', []);
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', []);
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', []);

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getEnv()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEnv', []);

        return parent::getEnv();
    }

    /**
     * {@inheritDoc}
     */
    public function setEnv($env)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEnv', [$env]);

        return parent::setEnv($env);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartnerCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartnerCode', []);

        return parent::getPartnerCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartnerCode($partnerCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartnerCode', [$partnerCode]);

        return parent::setPartnerCode($partnerCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getStoreId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStoreId', []);

        return parent::getStoreId();
    }

    /**
     * {@inheritDoc}
     */
    public function setStoreId($storeId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStoreId', [$storeId]);

        return parent::setStoreId($storeId);
    }

    /**
     * {@inheritDoc}
     */
    public function getAccessKey()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAccessKey', []);

        return parent::getAccessKey();
    }

    /**
     * {@inheritDoc}
     */
    public function setAccessKey($accessKey)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAccessKey', [$accessKey]);

        return parent::setAccessKey($accessKey);
    }

    /**
     * {@inheritDoc}
     */
    public function getAmount()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAmount', []);

        return parent::getAmount();
    }

    /**
     * {@inheritDoc}
     */
    public function setAmount($amount)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAmount', [$amount]);

        return parent::setAmount($amount);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartnerRefId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartnerRefId', []);

        return parent::getPartnerRefId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartnerRefId($partnerRefId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartnerRefId', [$partnerRefId]);

        return parent::setPartnerRefId($partnerRefId);
    }

    /**
     * {@inheritDoc}
     */
    public function getPartnerTransId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getPartnerTransId', []);

        return parent::getPartnerTransId();
    }

    /**
     * {@inheritDoc}
     */
    public function setPartnerTransId($partnerTransId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setPartnerTransId', [$partnerTransId]);

        return parent::setPartnerTransId($partnerTransId);
    }

    /**
     * {@inheritDoc}
     */
    public function getTransType()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTransType', []);

        return parent::getTransType();
    }

    /**
     * {@inheritDoc}
     */
    public function setTransType($transType)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTransType', [$transType]);

        return parent::setTransType($transType);
    }

    /**
     * {@inheritDoc}
     */
    public function getMomoTransId()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMomoTransId', []);

        return parent::getMomoTransId();
    }

    /**
     * {@inheritDoc}
     */
    public function setMomoTransId($momoTransId)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMomoTransId', [$momoTransId]);

        return parent::setMomoTransId($momoTransId);
    }

    /**
     * {@inheritDoc}
     */
    public function getStatus()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStatus', []);

        return parent::getStatus();
    }

    /**
     * {@inheritDoc}
     */
    public function setStatus($status)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStatus', [$status]);

        return parent::setStatus($status);
    }

    /**
     * {@inheritDoc}
     */
    public function getMessage()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getMessage', []);

        return parent::getMessage();
    }

    /**
     * {@inheritDoc}
     */
    public function setMessage($message)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setMessage', [$message]);

        return parent::setMessage($message);
    }

    /**
     * {@inheritDoc}
     */
    public function getResponseTime()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getResponseTime', []);

        return parent::getResponseTime();
    }

    /**
     * {@inheritDoc}
     */
    public function setResponseTime($responseTime)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setResponseTime', [$responseTime]);

        return parent::setResponseTime($responseTime);
    }

    /**
     * {@inheritDoc}
     */
    public function getSignature()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getSignature', []);

        return parent::getSignature();
    }

    /**
     * {@inheritDoc}
     */
    public function setSignature($signature)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setSignature', [$signature]);

        return parent::setSignature($signature);
    }

    /**
     * {@inheritDoc}
     */
    public function getOrder()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getOrder', []);

        return parent::getOrder();
    }

    /**
     * {@inheritDoc}
     */
    public function setOrder(\Eccube\Entity\Order $Order)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setOrder', [$Order]);

        return parent::setOrder($Order);
    }

}
